---
description: 
globs: 
alwaysApply: true
---
# 前端应用架构

## React应用结构

本项目的React应用结构遵循以下原则：

### 组件组织

- [src/components/](mdc:src/components) - 可重用组件
  - 每个组件应包含自己的逻辑和样式
  - 组件应尽可能保持独立，减少耦合

- [src/pages/](mdc:src/pages) - 页面级组件
  - 每个页面对应路由中的一个路径
  - 页面组件负责组合和协调其他组件

### 路由管理

- [src/routes/](mdc:src/routes) - 路由定义和配置
  - 使用React Router进行路由管理
  - 路由应清晰地映射到对应的页面组件

### 状态管理

- [src/store/](mdc:src/store) - 使用Zustand进行全局状态管理
  - 每个状态存储应该是单一责任的
  - 避免在组件中直接修改状态，应通过操作函数修改

### 钩子与工具函数

- [src/hooks/](mdc:src/hooks) - 自定义React钩子
  - 钩子应保持简单和可重用
  - 复杂逻辑应当被拆分为多个钩子

- [src/utils/](mdc:src/utils) - 工具函数
  - 纯函数，无副作用
  - 高度可重用的代码段

### API请求

- [src/api/](mdc:src/api) - API服务和请求函数
  - 使用React Query管理API请求和缓存
  - API请求函数应该封装完整的请求逻辑

